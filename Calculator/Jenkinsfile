pipeline {
    agent any
    environment {
        PATH = "/usr/share/maven:$PATH"
    }
    parameters {
        choice(
            choices: ['Dev', 'Prod'],
            description: 'Select the environment',
            name: 'Environment'
        )
    }

    stages {

        stage('Code checkout according to environment') {
            steps {
                script {
                    if (params.Environment == 'Dev') {
                        checkout scmGit(branches: [[name: '*/Dev']], extensions: [[$class: 'SparseCheckoutPaths', sparseCheckoutPaths: [[path: 'Calculator']]]], userRemoteConfigs: [[credentialsId: '', url: ' https://github.com/Harshita878/miniAssignment.git']])
                    } else if (params.Environment == 'Prod') {
                        checkout scmGit(branches: [[name: '*/Prod']], extensions: [[$class: 'SparseCheckoutPaths', sparseCheckoutPaths: [[path: 'Calculator']]]], userRemoteConfigs: [[credentialsId: '', url: ' https://github.com/Harshita878/miniAssignment.git']])
                    } else {
                        error('Invalid choice')
                    }
                }
            }
        }

        stage("Maven Build") {
            steps {
                sh "mvn -f Calculator/pom.xml clean install"
            }
        }

        stage("Unit Testing") {
            steps {
                sh "mvn -f Calculator/pom.xml test"
            }
        }

           stage('SonarQube analysis') {
            steps {
                withSonarQubeEnv('server-sonar') {
                    sh "mvn -f Calculator/pom.xml clean install sonar:sonar"
                }
            }
        }


        stage("Deploy to Tomcat") {
        steps {
            script {
                def warFileInWorkspace = "key/Calculator.war"
                def tomcatUrl = params.Environment == 'Dev' ? "http://192.168.56.101:8081/" : "http://192.168.56.101:9090/"

                echo "Deploying $warFileInWorkspace to Tomcat at $tomcatUrl"

            
                // Use curl to deploy the WAR file to Tomcat
                sh "curl --upload-file ${warFileInWorkspace} '$tomcatUrl/manager/text/deploy?path=/app&update=true' -u tomcat:password"
            }
        }
    }
}

    post {
        always {
            mail to: "harshitaagrawal091@gmail.com",
            subject: "Jenkins Job with Build #${BUILD_NUMBER}",
            body: "Jenkins Job with Build #${BUILD_NUMBER}. Please go to ${BUILD_URL} and verify the build."
        }
    }
}

